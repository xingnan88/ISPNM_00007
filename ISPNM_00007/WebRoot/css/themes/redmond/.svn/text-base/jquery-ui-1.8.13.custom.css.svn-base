	<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">Read/Write&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Indicates where (if at all) interior borders between cells are
rendered by the browser. In addition to setting the table to draw
borders to turn the cells into a matrix, you can set borders to be
drawn only to separate borders, columns, or any sanctioned cell
grouping (<span class="literal">thead</span>, <span class="literal">tbody</span>,
<span class="literal">tfoot</span>, <span class="literal">colgroup</span>, or
<span class="literal">col</span>). The <span class="literal">border</span> attribute must
be presenteither as a Boolean or set to a specific border
sizefor any cell borders to be drawn. Do not confuse this
property with the <span class="literal">rules[ ]</span> collection of
<span class="literal">styleSheet</span> objects. Scripted changes to this
property do not always yield the desired results, especially in early
versions of Netscape 6.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td><span class="programlisting"><pre>document.getElementById("myTable").rules = "groups";</pre>
						</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Any one case-insensitive rules constant (as a string):</p>
<dl>

<dt><span class="LITERAL">all</span></dt>
<dd>
<p>Renders borders around each cell</p>
</dd>



<dt><span class="LITERAL">cols</span></dt>
<dd>
<p>Renders borders between columns only</p>
</dd>



<dt><span class="LITERAL">groups</span></dt>
<dd>
<p>Renders borders between cell groups as defined by
<span class="LITERAL">thead</span>, <span class="LITERAL">tfoot</span>,
<span class="LITERAL">tbody</span>, <span class="LITERAL">colgroup</span>, or
<span class="LITERAL">col</span> elements
</p>
</dd>



<dt><span class="LITERAL">none</span></dt>
<dd>
<p>Hides all interior borders</p>
</dd>



<dt><span class="LITERAL">rows</span></dt>
<dd>
<p>Renders borders between rows only</p>
</dd>

</dl>					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			<span class="literal">none</span> (when <span class="literal">border=0</span>);
<span class="literal">all</span> (when <span class="literal">border</span> is any other
value).
</p>
					</td>
				</tr>
			</table>
		</div>

		<div id="scrollHeight, scrollWidth">
					<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
						<tr><td valign="top" class="name">scrollHeight, scrollWidth</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">7</span> IE <span class="emphasis">4</span> DOM <span class="emphasis">n/a</span>&nbsp;&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" nowrap class="usage"><p class="literal"></p>
							</td><td valign="top" nowrap class="requirements"><span class="emphasis">Read-only</span>&nbsp;&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="description"><p>			Originally implemented in IE 4 for elements that either scrolled or
		influenced an element's scroll
		(<span class="literal">body</span>, <span class="literal">button</span>,
		<span class="literal">caption</span>, <span class="literal">div</span>,
		<span class="literal">fieldset</span>, <span class="literal">legend</span>,
		<span class="literal">marquee</span>, and <span class="literal">textarea</span>), these
		properties return the pixel dimensions of an element, including
		elements that are larger than the viewable area in the browser
		window. This is in contrast to the <span class="literal">clientHeight</span>
		and <span class="literal">clientWidth</span> properties for scrollable
		elements, which return dimensions of only visible portions of the
		element. IE for the Macintosh, however, interprets the intent of the
		scroll- properties differently, returning the dimensions of the
		visible portion.
		</p>
									</td>
								</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
								<tr>
									<td colspan="2"><p>			Starting in IE 5 for Windows, all HTML elements have these
		properties, and the values for nonscrolling elements are the same as
		the <span class="literal">offsetHeight</span> and
		<span class="literal">offsetWidth</span> properties. Netscape 7 implements
		these properties for all elements, returning the height and width of
		the element, whether or not it's in view. The
		important point is that for key elements, such as the
		<span class="literal">body</span>, the properties mean different things and can
		disrupt cross-platform operation.
		</p>
									</td>
	</tr>

						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td><span class="programlisting"><pre>var midPoint = document.body.scrollHeight/2;</pre>
								</span></td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
						</tr>
						<tr>
							<td colspan="2"><p>			Positive integer or zero.</p>
							</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
						</tr>
						<tr>
							<td colspan="2"><p>			None. </p>
							</td>
						</tr>
					</table>
				</div>

		<div id="scrollLeft, scrollTop">
					<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
						<tr><td valign="top" class="name">scrollLeft, scrollTop</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">7</span> IE <span class="emphasis">4</span> DOM <span class="emphasis">n/a</span>&nbsp;&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" nowrap class="usage"><p class="literal"></p>
							</td><td valign="top" nowrap class="requirements"><span class="emphasis">Read/Write</span>&nbsp;&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="description"><p>			Provide the distance in pixels between the actual left or top edge of
		the element's physical content and the left or top
		edge of the visible portion of the content. Setting these properties
		allows you to use a script to adjust the scrolling of content within
		a scrollable container, such as text in a <span class="literal">textarea</span>
		element or an entire document in the browser window or frame. When
		the content is not scrolled, both values are zero. Setting the
		<span class="literal">scrollTop</span> property to 15 scrolls the document
		upward by 15 pixels in the window; the <span class="literal">scrollLeft</span>
		property is unaffected unless explicitly changed. The property values
		change as the user adjusts the scrollbars. This is important for some
		event-driven positioning tasks in IE for Windows because the
		coordinate system for event offset measurements are with respect to
		the visible area of a page in the browser window. You must add
		<span class="literal">document.body</span> scrolling factors to align event
		coordinates with body content positions (see the element dragging
		example in Chapter 6). Starting with IE 5 for
		Windows, the <span class="literal">scrollLeft</span> and
		<span class="literal">scrollTop</span> properties are available for all HTML
		element objects, but values for unscrollable elements are zero.
		</p>
									</td>
	</tr>

						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td><span class="programlisting"><pre>document.body.scrollTop = 40;</pre>
								</span></td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
						</tr>
						<tr>
							<td colspan="2"><p>			Positive integer or zero.</p>
							</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
						</tr>
						<tr>
							<td colspan="2"><p>			<span class="literal">0</span></p>
							</td>
						</tr>
					</table>
				</div>

		<div id="summary">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">summary</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">6</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">Read-only&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Reflects the HTML 4 <span class="literal">summary</span> attribute, which
provides no particular functionality in mainstream browsers. But you
can assign a value to it in the source code to convey data to a
script that reads the property.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td><span class="programlisting"><pre>var data = document.getElementById("myTable").summary;</pre>
						</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			String.</p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Empty string.</p>
					</td>
				</tr>
			</table>
		</div>
		<div id="tabIndex">
					<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
						<tr><td valign="top" class="name">tabIndex</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" nowrap class="usage"><p class="literal"></p>
							</td><td valign="top" nowrap class="requirements"><span class="emphasis">Read/Write</span>&nbsp;&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="description"><p>			This is a number that indicates the sequence of this element within
		the tabbing order of all focusable elements in the document. Tabbing
		order follows a strict set of rules. Elements that have values other
		than zero assigned to their <span class="literal">tabIndex</span> properties
		are first in line when a user starts tabbing in a page. Focus starts
		with the element with the lowest <span class="literal">tabIndex</span> value
		and proceeds in order to the highest value, regardless of physical
		location on the page or in the document. If two elements have the
		same <span class="literal">tabIndex</span> values, the element that comes
		earlier in the document receives focus first. Next come all elements
		that either don't support the
		<span class="literal">tabIndex</span> property or have the value set to zero.
		These elements receive focus in the order in which they appear in the
		document.
		</p>
									</td>
								</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
								<tr>
									<td colspan="2"><p>			The W3C DOM and Netscape 6 limit the <span class="literal">tabIndex</span>
		property to the following element objects: <span class="literal">a</span>,
		<span class="literal">area</span>, <span class="literal">button</span>,
		<span class="literal">input</span>, <span class="literal">object</span>,
		<span class="literal">select</span>, <span class="literal">textarea</span>. To this list,
		IE 4 adds <span class="literal">applet</span>, <span class="literal">body</span>,
		<span class="literal">div</span>, <span class="literal">embed</span>,
		<span class="literal">isindex</span>, <span class="literal">marquee</span>,
		<span class="literal">span</span>, <span class="literal">table</span>, and
		<span class="literal">td</span>. IE 5 adds every other renderable element. A
		negative value in IE (only) removes an element from tabbing order
		entirely.
		</p>
									</td>
								</tr>
								<tr>
									<td colspan="2"><p>			Links and anchors cannot be tabbed to with the Mac version of IE 4,
		so the <span class="literal">tabIndex</span> property for <span class="literal">a</span>
		element objects is ignored in that version.
		</p>
									</td>
	</tr>

						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td><span class="programlisting"><pre>document.getElementById("link3").tabIndex = 6;</pre>
								</span></td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
						</tr>
						<tr>
							<td colspan="2"><p>			Integer.</p>
							</td>
						</tr>
						<tr>
							<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
						</tr>
						<tr>
							<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
						</tr>
						<tr>
							<td colspan="2"><p>			<span class="literal">0</span> </p>
							</td>
						</tr>
					</table>
		</div>
		<div id="tBodies[ ]">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">tBodies[ ]</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4(Win)/5(Mac)</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">Read-only&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Returns a collection of <span class="literal">tBody</span> objects in the
current table. Every <span class="literal">table</span> element has at least
one (explicit or implied) <span class="literal">tBody</span> object nested
inside.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td><span class="programlisting"><pre>var bodSections = document.getElementById("myTable").tBodies;</pre>
						</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Reference to a collection of <span class="literal">tBody</span> objects.</p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Array of length one.</p>
					</td>
				</tr>
			</table>
		</div><div id="tFoot">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">tFoot</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4(Win)/5(Mac)</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">Read-only&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Returns a reference to the <span class="literal">tfoot</span> element object if
one has been defined for the table. If no <span class="literal">tfoot</span>
element exists, the value is <span class="literal">null</span>. You can access
<span class="literal">tfoot</span> element object properties and methods
through this reference if you like. This property is available only
on the Win32 version of Internet Explorer 4.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td><span class="programlisting"><pre>var tableFootTxt = document.getElementById("myTable").tFoot.firstChild.nodeValue;</pre>
						</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			<span class="literal">tfoot</span> element object reference.</p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			<span class="literal">null</span></p>
					</td>
				</tr>
			</table>
		</div><div id="tHead">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">tHead</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4(Win)/5(Mac)</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">Read-only&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Returns a reference to the <span class="literal">thead</span> element object if
one has been defined for the table. If no <span class="literal">thead</span>
element exists, the value is <span class="literal">null</span>. You can access
<span class="literal">thead</span> element object properties and methods
through this reference if you like. This property is available only
on the Win32 version of Internet Explorer 4.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="example"><span class="title">Example</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td><span class="programlisting"><pre>var tableHeadTxt = document.getElementById("myTable").tHead.firstChild.nodevalue;</pre>
						</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="value"><span class="title">Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			<span class="literal">thead</span> element object reference.</p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap colspan="2" class="default"><span class="title">Default</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			<span class="literal">null</span></p>
					</td>
				</tr>
			</table>
		</div><div id="width">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">width</td><td valign="top" nowrap class="compatibility">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>See height.</p>
												</td>
</tr>
			</table>
		</div><div id="createCaption( ), deleteCaption( )">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">createCaption( ), deleteCaption( )</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Add or remove a <span class="literal">caption</span> element nested within the
current <span class="literal">table</span> element. If no caption exists, the
creation method produces an empty element, which your scripts must
then populate with caption text (through common element content
modification techniques). If a caption exists, the method is
essentially ignored, and returns a reference to the existing
<span class="literal">caption</span> element.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="parameters"><span class="title">Parameters</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			None. </p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="returnedvalue"><span class="title">Returned Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Reference to new caption element (for <span class="literal">createCaption(
)</span>); nothing for <span class="literal">deleteCaption( )</span>.
</p>
					</td>
				</tr>
			</table>
		</div><div id="createTFoot( ), createTHead( ), deleteTFoot( ), deleteTHead( )">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">createTFoot( ), createTHead( ), deleteTFoot( ), deleteTHead( )</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Add or remove a <span class="literal">thead</span> or <span class="literal">tfoot</span>
element nested within the current <span class="literal">table</span> element.
If no head or foot table section exists, the creation method produces
an empty element, which your scripts must then populate with rows
(through <span class="literal">thead.insertRow( )</span> and
<span class="literal">tfoot.insertRow( )</span> methods). If the desired table
section exists, the method is essentially ignored, and returns a
reference to the existing <span class="literal">thead</span> or
<span class="literal">tfoot</span> element.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="parameters"><span class="title">Parameters</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			None. </p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="returnedvalue"><span class="title">Returned Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Reference to newly created element (for <span class="literal">createTFoot(
)</span> and <span class="literal">createTHead( )</span>); Nothing for
<span class="literal">deleteTHead( )</span> and <span class="literal">deleteTFoot(
)</span>.
</p>
					</td>
				</tr>
			</table>
		</div><div id="deleteRow( )">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">deleteRow( )</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal">deleteRow(<span class="replaceable">index</span>)</p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Removes a <span class="literal">tr</span> element nested within the current
<span class="literal">table</span> element. The integer parameter points to the
zero-based item in the <span class="literal">rows</span> collection. To
repopulate a table with new or sorted content, empty the table (or
just a table section) with iterative calls to the <span class="literal">deleteRow(
)</span> method:
</p>
<span class="PROGRAMLISTING"><pre>while (<var class="replaceable">tableReference</var>.rows.length&gt; 0) {
     <var class="replaceable">tableReference</var>.deleteRow(0);
}</pre></span>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="parameters"><span class="title">Parameters</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td>
						<ul><li><span class="literal"></span>Zero-based integer corresponding to the said numbered
<span class="literal">tr</span> element in source code order (nested within the
current element).
</li></ul>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="returnedvalue"><span class="title">Returned Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			None.</p>
					</td>
				</tr>
			</table>
		</div><div id="insertRow( )">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">insertRow( )</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">6</span> IE <span class="emphasis">4(Win)</span> DOM <span class="emphasis">1</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal">insertRow(<span class="replaceable">index</span>)</p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Inserts a <span class="literal">tr</span> element nested within the current
<span class="literal">table</span> element. The integer parameter points to the
zero-based index in the <span class="literal">rows</span> collection where the
new row should go, but in IE you can also use the shortcut value of
<span class="literal">-1</span> to append the row to the end of the collection.
Adding the row inserts an empty element, to which you add cells via
the <span class="literal">insertCell( )</span> method. Unfortunately, scripting
the addition of table rows and cells in IE for the Macintosh
(including Version 5.1) is very broken, yielding elephantine row and
cell dimensions. For nonnested tables, you might be able to get away
with regular document tree node creation and insertion instead of the
<span class="literal">table</span> (and related) object convenience methods.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="parameters"><span class="title">Parameters</span></td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td>
						<ul><li><span class="literal"></span>Zero-based integer corresponding to a row of the
<span class="literal">rows</span> collection before which the new row is to be
inserted.
</li></ul>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="returnedvalue"><span class="title">Returned Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			Reference to the newly inserted row.</p>
					</td>
				</tr>
			</table>
		</div><div id="lastPage( ), nextPage( ), previousPage( )">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">lastPage( ), nextPage( ), previousPage( )</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">n/a</span> IE <span class="emphasis">4/5</span> DOM <span class="emphasis">n/a</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal"></p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Advises the data binding facilities to load the last, next, or
previous group of records from the data source to fill the number of
records established with the <span class="literal">dataPageSize</span>
property. The <span class="literal">lastPage( )</span> method is available in
IE 5 or later.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="parameters"><span class="title">Parameters</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			None.</p>
					</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="returnedvalue"><span class="title">Returned Value</span></td>
				</tr>
				<tr>
					<td colspan="2"><p>			None.</p>
					</td>
				</tr>
			</table>
		</div><div id="moveRow( )">
			<table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
				<tr><td valign="top" class="name">moveRow( )</td><td valign="top" nowrap class="compatibility">NN <span class="emphasis">n/a</span> IE <span class="emphasis">5(Win)</span> DOM <span class="emphasis">n/a</span>&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" nowrap class="usage"><p class="literal">moveRow(<span class="replaceable">indexToMove</span>,
<span class="replaceable">destinationIndex</span>)</p>
					</td><td valign="top" nowrap class="requirements">&nbsp;&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="description">
						<p>Moves a row in the table from its original location to a different
row position. The first parameter is a zero-based index of the row
(within the <span class="literal">rows</span> collection) you wish to move. The
second parameter is the index of the row before which you want to
move the row. As a method of the <span class="literal">table</span> object,
<span class="literal">moveRow( )</span>'s index parameters
include the first row, which may contain <span class="literal">th</span>
elements you don't want to move. Invoke the method
on the <span class="literal">tbody</span> object if you want counting to be
just within a table section.
</p>
												</td>
</tr>
				<tr>
					<td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
				</tr>
				<tr>
					<td valign="top" colspan="2" class="parameters"><span class="title">Parameters</span></td>
				</tr>
